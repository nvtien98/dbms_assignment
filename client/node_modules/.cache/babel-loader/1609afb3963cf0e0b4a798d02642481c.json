{"ast":null,"code":"import axios from 'axios';\nimport { baseUrl } from './config';\nexport const userService = {\n  login,\n  logout,\n  register,\n  localSearchUser\n};\n\nasync function login(email, password) {\n  try {\n    return await axios.post(\"\".concat(baseUrl, \"/login\"), {\n      email,\n      password\n    }).then(res => res.data).then(data => {\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    });\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction logout() {\n  console.log('remove localstorage and logout');\n}\n\nasync function register(user) {\n  try {\n    const email = user.email,\n          firstname = user.firstname,\n          lastname = user.lastname,\n          password = user.password,\n          avatar = user.avatar;\n    let bodyFormData = new FormData();\n    bodyFormData.append('email', email);\n    bodyFormData.append('firstname', firstname);\n    bodyFormData.append('lastname', lastname);\n    bodyFormData.append('password', password);\n    bodyFormData.append('avatar', avatar);\n    return await axios.post(\"\".concat(baseUrl, \"/register\"), bodyFormData).then(res => res.data).then(data => {\n      return data;\n    });\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction localSearchUser(users, filterText) {\n  const lowerCaseText = filterText.toLowerCase();\n  const results = users.filter(user => {\n    const firstnameMatch = user.firstname && user.firstname.toLowerCase().includes(lowerCaseText);\n    const lastnameMatch = user.lastname && user.lastname.toLowerCase().includes(lowerCaseText);\n    const fullNameMatch = user.firstname && user.lastname && (user.firstname + ' ' + user.lastname).toLowerCase().includes(lowerCaseText);\n    return firstnameMatch || lastnameMatch || fullNameMatch;\n  });\n  return results;\n}","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/_services/user.service.js"],"names":["axios","baseUrl","userService","login","logout","register","localSearchUser","email","password","post","then","res","data","localStorage","setItem","JSON","stringify","err","Promise","reject","console","log","user","firstname","lastname","avatar","bodyFormData","FormData","append","users","filterText","lowerCaseText","toLowerCase","results","filter","firstnameMatch","includes","lastnameMatch","fullNameMatch"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { baseUrl } from './config';\n\nexport const userService = {\n  login,\n  logout,\n  register,\n  localSearchUser\n}\n\nasync function login(email, password) {\n  try {\n    return await axios.post(`${baseUrl}/login`, { email, password })\n      .then(res => res.data)\n      .then(data => { localStorage.setItem('user', JSON.stringify(data)); return data; });\n  }\n  catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction logout() {\n  console.log('remove localstorage and logout');\n}\n\nasync function register(user) {\n  try {\n    const { email, firstname, lastname, password, avatar } = user;\n    let bodyFormData = new FormData();\n    bodyFormData.append('email', email);\n    bodyFormData.append('firstname', firstname);\n    bodyFormData.append('lastname', lastname);\n    bodyFormData.append('password', password);\n    bodyFormData.append('avatar', avatar);\n    return await axios.post(`${baseUrl}/register`,\n      bodyFormData\n    )\n      .then(res => res.data)\n      .then(data => { return data });\n  }\n  catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction localSearchUser(users, filterText) {\n  const lowerCaseText = filterText.toLowerCase();\n  const results = users.filter((user) => {\n    const firstnameMatch = user.firstname && user.firstname.toLowerCase().includes(lowerCaseText);\n    const lastnameMatch = user.lastname && user.lastname.toLowerCase().includes(lowerCaseText);\n    const fullNameMatch = (user.firstname && user.lastname) && (user.firstname + ' ' + user.lastname).toLowerCase().includes(lowerCaseText);\n    return firstnameMatch || lastnameMatch || fullNameMatch;\n  });\n  return results;\n}\n\n"]},"metadata":{},"sourceType":"module"}