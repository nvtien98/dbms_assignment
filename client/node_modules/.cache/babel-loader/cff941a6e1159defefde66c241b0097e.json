{"ast":null,"code":"var _jsxFileName = \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ConversationContainer/ChatboxContainer/MessageTyping/MessageTyping.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Popup } from 'semantic-ui-react';\nimport Avatar from \"./../../../Avatar/Avatar\";\nimport Typing from './../../../Typing/Typing';\nimport Socket from './../../../../Socket';\n\nclass MessageTyping extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      typingIDs: []\n    };\n\n    this.onSomeoneTyping = message => {\n      const roomID = this.props.roomID;\n      const actorID = message.actorID,\n            conversation_id = message.conversation_id;\n      if (conversation_id !== roomID) return;\n      this.setState(prevState => ({\n        typingIDs: [...prevState.typingIDs, actorID]\n      }));\n    };\n\n    this.onSomeoneStopTyping = message => {\n      const roomID = this.props.roomID;\n      const actorID = message.actorID,\n            conversation_id = message.conversation_id;\n      if (conversation_id !== roomID) return;\n      this.setState(prevState => ({\n        typingIDs: prevState.typingIDs.filter(id => id !== actorID)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    Socket.on(\"ROOM.SERVER.TYPING\", message => {\n      this.onSomeoneTyping(message);\n    });\n    Socket.on(\"ROOM.SERVER.STOP_TYPING\", message => {\n      this.onSomeoneStopTyping(message);\n    });\n  }\n\n  render() {\n    const typingIDs = this.state.typingIDs;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, typingIDs.map(id => React.createElement(\"div\", {\n      key: id,\n      className: [\"MessageGroup\", \"MessageGroup--Left\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"MessageGroup__Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      userID: id,\n      width: \"2.25em\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: [\"MessageGroup__ChatboxContainer\", \"MessageGroup__ChatboxContainer--Left\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      content: \"Someone is typing\",\n      size: \"mini\",\n      position: \"right center\",\n      inverted: true,\n      trigger: React.createElement(\"div\", {\n        className: \"Message__Content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Typing, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      style: {\n        padding: \"0.75em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  authentication: {\n    user\n  }\n}) => ({\n  user\n});\n\nexport default connect(mapStateToProps)(MessageTyping);","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ConversationContainer/ChatboxContainer/MessageTyping/MessageTyping.js"],"names":["React","Component","Fragment","connect","Popup","Avatar","Typing","Socket","MessageTyping","state","typingIDs","onSomeoneTyping","message","roomID","props","actorID","conversation_id","setState","prevState","onSomeoneStopTyping","filter","id","componentDidMount","on","render","map","join","padding","mapStateToProps","authentication","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Popup } from 'semantic-ui-react';\nimport Avatar from \"./../../../Avatar/Avatar\";\nimport Typing from './../../../Typing/Typing';\n\nimport Socket from './../../../../Socket';\n\nclass MessageTyping extends Component {\n\tstate = {\n\t\ttypingIDs: []\n\t}\n\n\tcomponentDidMount() {\n\t\tSocket.on(\"ROOM.SERVER.TYPING\", (message) => { this.onSomeoneTyping(message) });\n\t\tSocket.on(\"ROOM.SERVER.STOP_TYPING\", (message) => { this.onSomeoneStopTyping(message) });\n\t}\n\n\tonSomeoneTyping = (message) => {\n\t\tconst { roomID } = this.props;\n\t\tconst { actorID, conversation_id } = message;\n\n\t\tif (conversation_id !== roomID) return;\n\t\tthis.setState((prevState) => ({ typingIDs: [...prevState.typingIDs, actorID] }));\n\t}\n\n\n\tonSomeoneStopTyping = (message) => {\n\t\tconst { roomID } = this.props;\n\t\tconst { actorID, conversation_id } = message;\n\t\tif (conversation_id !== roomID) return;\n\t\tthis.setState((prevState) => ({ typingIDs: prevState.typingIDs.filter((id) => id !== actorID) }));\n\t}\n\n\trender() {\n\t\tconst { typingIDs } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{typingIDs.map((id) =>\n\t\t\t\t\t<div key={id} className={[\"MessageGroup\", \"MessageGroup--Left\"].join(\" \")}>\n\t\t\t\t\t\t<div className=\"MessageGroup__Avatar\"><Avatar userID={id} width=\"2.25em\" /> </div>\n\t\t\t\t\t\t<div className={[\"MessageGroup__ChatboxContainer\", \"MessageGroup__ChatboxContainer--Left\"].join(\" \")}>\n\t\t\t\t\t\t\t<div className=\"Message\">\n\t\t\t\t\t\t\t\t<Popup content={`Someone is typing`} size=\"mini\" position=\"right center\" inverted\n\t\t\t\t\t\t\t\t\ttrigger={<div className=\"Message__Content\"><Typing /></div>} style={{ padding: \"0.75em\" }} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ authentication: { user } }) => ({ user });\n\nexport default connect(mapStateToProps)(MessageTyping);"]},"metadata":{},"sourceType":"module"}