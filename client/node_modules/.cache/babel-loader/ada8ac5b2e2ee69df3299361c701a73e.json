{"ast":null,"code":"import _defineProperty from \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { baseUrl } from './config';\n\nconst getToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user.token;\n};\n\nconst getDefaultHeader = () => ({\n  Authorization: getToken()\n});\n\nexport function getRecentConversations() {\n  return axios.get(\"\".concat(baseUrl, \"/conversations\"), {\n    headers: getDefaultHeader()\n  });\n}\nexport function getConversationInfor(id) {\n  return axios.get(\"\".concat(baseUrl, \"/conversations/\").concat(id), {\n    headers: getDefaultHeader()\n  });\n}\nexport function getUsers() {\n  return axios.get(\"\".concat(baseUrl, \"/users\"), {\n    headers: getDefaultHeader()\n  }).then(res => res.data).then(data => {\n    return data;\n  });\n}\nexport function getMessages(room_id) {\n  return axios.get(\"\".concat(baseUrl, \"/messages/\").concat(room_id), {\n    headers: getDefaultHeader()\n  });\n}\nexport function sendMessage(message) {\n  return axios.post(\"\".concat(baseUrl, \"/messages\"), _objectSpread({}, message), {\n    headers: getDefaultHeader()\n  });\n}\nexport function createGroup(group_name, members) {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return axios.post(\"\".concat(baseUrl, \"/groups\"), {\n    group_name: group_name,\n    members: members.concat([user.user_id])\n  }, {\n    headers: getDefaultHeader()\n  }).then(res => res.data);\n}\nexport function updateSeenStatus(roomID) {\n  return axios.put(\"\".concat(baseUrl, \"/notification/\").concat(roomID), {}, {\n    headers: getDefaultHeader()\n  });\n}","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/_services/api.service.js"],"names":["axios","baseUrl","getToken","user","JSON","parse","localStorage","getItem","token","getDefaultHeader","Authorization","getRecentConversations","get","headers","getConversationInfor","id","getUsers","then","res","data","getMessages","room_id","sendMessage","message","post","createGroup","group_name","members","concat","user_id","updateSeenStatus","roomID","put"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,SAAOJ,IAAI,CAACK,KAAZ;AACD,CAHD;;AAKA,MAAMC,gBAAgB,GAAG,OAAO;AAAEC,EAAAA,aAAa,EAAER,QAAQ;AAAzB,CAAP,CAAzB;;AAEA,OAAO,SAASS,sBAAT,GAAkC;AACvC,SAAOX,KAAK,CAACY,GAAN,WACFX,OADE,qBAEL;AACEY,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAFK,CAAP;AAMD;AAED,OAAO,SAASK,oBAAT,CAA8BC,EAA9B,EAAkC;AACvC,SAAOf,KAAK,CAACY,GAAN,WACFX,OADE,4BACuBc,EADvB,GAEL;AACEF,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAFK,CAAP;AAMD;AAED,OAAO,SAASO,QAAT,GAAoB;AACzB,SAAOhB,KAAK,CAACY,GAAN,WACFX,OADE,aAEL;AACEY,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAFK,EAMJQ,IANI,CAMCC,GAAG,IAAIA,GAAG,CAACC,IANZ,EAOJF,IAPI,CAOCE,IAAI,IAAI;AAAE,WAAOA,IAAP;AAAa,GAPxB,CAAP;AAQD;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAOrB,KAAK,CAACY,GAAN,WACFX,OADE,uBACkBoB,OADlB,GAEL;AACER,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAFK,CAAP;AAMD;AAED,OAAO,SAASa,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAOvB,KAAK,CAACwB,IAAN,WACFvB,OADE,kCAEAsB,OAFA,GAGL;AACEV,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAHK,CAAP;AAOD;AAED,OAAO,SAASgB,WAAT,CAAqBC,UAArB,EAAiCC,OAAjC,EAA0C;AAC/C,QAAMxB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,SAAOP,KAAK,CAACwB,IAAN,WACFvB,OADE,cAEL;AAAEyB,IAAAA,UAAU,EAAEA,UAAd;AAA0BC,IAAAA,OAAO,EAAEA,OAAO,CAACC,MAAR,CAAe,CAACzB,IAAI,CAAC0B,OAAN,CAAf;AAAnC,GAFK,EAGL;AACEhB,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAHK,EAOJQ,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAPZ,CAAP;AAQD;AAED,OAAO,SAASW,gBAAT,CAA0BC,MAA1B,EAAkC;AACvC,SAAO/B,KAAK,CAACgC,GAAN,WACF/B,OADE,2BACsB8B,MADtB,GAEL,EAFK,EAGL;AACElB,IAAAA,OAAO,EAAEJ,gBAAgB;AAD3B,GAHK,CAAP;AAOD","sourcesContent":["import axios from 'axios';\nimport { baseUrl } from './config';\n\nconst getToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user.token;\n}\n\nconst getDefaultHeader = () => ({ Authorization: getToken() });\n\nexport function getRecentConversations() {\n  return axios.get(\n    `${baseUrl}/conversations`,\n    {\n      headers: getDefaultHeader()\n    }\n  );\n}\n\nexport function getConversationInfor(id) {\n  return axios.get(\n    `${baseUrl}/conversations/${id}`,\n    {\n      headers: getDefaultHeader()\n    }\n  )\n}\n\nexport function getUsers() {\n  return axios.get(\n    `${baseUrl}/users`,\n    {\n      headers: getDefaultHeader()\n    }\n  )\n    .then(res => res.data)\n    .then(data => { return data });\n}\n\nexport function getMessages(room_id) {\n  return axios.get(\n    `${baseUrl}/messages/${room_id}`,\n    {\n      headers: getDefaultHeader()\n    }\n  )\n}\n\nexport function sendMessage(message) {\n  return axios.post(\n    `${baseUrl}/messages`,\n    { ...message },\n    {\n      headers: getDefaultHeader()\n    }\n  )\n}\n\nexport function createGroup(group_name, members) {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return axios.post(\n    `${baseUrl}/groups`,\n    { group_name: group_name, members: members.concat([user.user_id]) },\n    {\n      headers: getDefaultHeader()\n    }\n  )\n    .then(res => res.data)\n}\n\nexport function updateSeenStatus(roomID) {\n  return axios.put(\n    `${baseUrl}/notification/${roomID}`,\n    {},\n    {\n      headers: getDefaultHeader()\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}