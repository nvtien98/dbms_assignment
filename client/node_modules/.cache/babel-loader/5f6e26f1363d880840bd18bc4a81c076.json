{"ast":null,"code":"import _defineProperty from \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ContactContainer/CreateGroup/CreateGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport { User } from './../../../_models/user';\nimport Avatar from './../../Avatar/Avatar';\nimport { createGroup } from './../../../_services/api.service';\nimport { userService } from './../../../_services/user.service';\nimport { withRouterInnerRef } from './../../../hocs/withRouter';\nimport { selectConversation } from './../../../_actions/chat.actions';\nimport { history } from './../../../_utils/history';\nimport { connect } from 'react-redux';\nimport Socket from './../../../Socket';\nimport './CreateGroup.css';\n\nclass CreateGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheck = (event, user) => {\n      if (event.target.checked) {\n        const newUser = new User(user._id, user.firstname, user.lastname);\n        this.setState(preState => ({\n          userSelecteds: [...preState.userSelecteds, newUser]\n        }));\n      } else {\n        this.setState(preState => {\n          const restUserSelecteds = preState.userSelecteds.filter(userSelected => {\n            const match = user._id === userSelected._id;\n            return !match;\n          });\n          return {\n            userSelecteds: [...restUserSelecteds]\n          };\n        });\n      }\n    };\n\n    this.handleRemove = (event, user) => {\n      event.preventDefault();\n      this.setState(preState => {\n        const restUserSelecteds = preState.userSelecteds.filter(userSelected => {\n          const match = user._id === userSelected._id;\n          return !match;\n        });\n        return {\n          userSelecteds: [...restUserSelecteds]\n        };\n      });\n    };\n\n    this.handleSearchInput = (event, {\n      value\n    }) => {\n      event.preventDefault();\n      const users = this.props.users;\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        if (value === '') {\n          this.setState({\n            userRenders: users\n          });\n        } else {\n          const results = userService.localSearchUser(users, value);\n          this.setState({\n            userRenders: results\n          });\n        }\n\n        this.setState({\n          isLoading: false\n        });\n      }, 300);\n    };\n\n    this.handleChangeGroupName = event => {\n      event.preventDefault();\n      const value = event.target.value;\n      this.setState({\n        groupName: value\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      userSelecteds: [],\n      userRenders: [],\n      groupName: '',\n      submitted: false\n    };\n  }\n\n  componentDidMount() {\n    const users = this.props.users;\n    this.setState({\n      userRenders: users\n    });\n  }\n\n  async handleSubmit() {\n    const _this$state = this.state,\n          groupName = _this$state.groupName,\n          userSelecteds = _this$state.userSelecteds;\n    this.setState({\n      submitted: true\n    });\n\n    if (userSelecteds.length < 2) {\n      alert(\"Require number of members is greater than 3\");\n      return false;\n    }\n\n    if (groupName) {\n      try {\n        const members = userSelecteds.map(user => {\n          return user._id;\n        });\n        const resData = await createGroup(groupName, members);\n        const conversation_id = resData._id;\n        const name = resData.group_name;\n        const lastMessageTime = resData.last_message_time;\n        const seenMembers = resData.seen_members;\n        const newConversation = {\n          _id: conversation_id,\n          name: name,\n          is_group: true,\n          lastMessageTime: lastMessageTime,\n          seenMembers: seenMembers,\n          lastMessage: null\n        };\n        this.props.addNewConversation(newConversation);\n        this.props.selectConversation({\n          conversation_id,\n          name,\n          is_group: true,\n          lastMessageTime,\n          seenMembers,\n          lastMessage: null\n        });\n        Socket.emit('ROOM.CLIENT.CREATE_GROUP', _objectSpread({}, newConversation, {\n          members\n        }));\n        history.push(\"/\".concat(conversation_id));\n        return true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userRenders = _this$state2.userRenders,\n          userSelecteds = _this$state2.userSelecteds,\n          isLoading = _this$state2.isLoading,\n          groupName = _this$state2.groupName,\n          submitted = _this$state2.submitted;\n    const numberSelected = userSelecteds.length;\n    return React.createElement(\"div\", {\n      className: \"Creat-Group-Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      name: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !groupName ? ' has-error' : ''),\n      style: {\n        height: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"groupName\",\n      value: groupName,\n      style: {\n        fontSize: '18px',\n        height: '38px'\n      },\n      onChange: event => {\n        this.handleChangeGroupName(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), submitted && !groupName && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Group name is required\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Form-Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"List-Member-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Input, {\n      loading: isLoading,\n      size: \"mini\",\n      placeholder: \"Search for people to add\",\n      style: {\n        width: '95%',\n        fontSize: '14px'\n      },\n      onChange: this.handleSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Users-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, userRenders.length > 0 ? userRenders.map(user => {\n      const fullname = user.firstname + ' ' + user.lastname;\n      return React.createElement(\"div\", {\n        className: \"ResultContainer\",\n        key: user._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        userID: user._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Fullname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, fullname), React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: false,\n        onChange: event => {\n          this.handleCheck(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"No users\"))), React.createElement(\"div\", {\n      className: \"Selected-Member-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Selected-Number-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Selected-Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"SELECTED\"), React.createElement(\"span\", {\n      className: \"Selected-Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, numberSelected)), React.createElement(\"div\", {\n      className: \"Selected-User-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, userSelecteds.map(user => {\n      const fullname = user.firstname + ' ' + user.lastname;\n      return React.createElement(\"div\", {\n        className: \"Selected-User\",\n        key: user._id,\n        onClick: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        userID: user._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Fullname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, fullname));\n    })))));\n  }\n\n}\n\nconst actionCreators = {\n  selectConversation: selectConversation\n};\nexport default withRouterInnerRef(connect(null, actionCreators, null, {\n  forwardRef: true\n})(CreateGroup));","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ContactContainer/CreateGroup/CreateGroup.js"],"names":["React","Input","User","Avatar","createGroup","userService","withRouterInnerRef","selectConversation","history","connect","Socket","CreateGroup","Component","constructor","props","handleCheck","event","user","target","checked","newUser","_id","firstname","lastname","setState","preState","userSelecteds","restUserSelecteds","filter","userSelected","match","handleRemove","preventDefault","handleSearchInput","value","users","isLoading","setTimeout","userRenders","results","localSearchUser","handleChangeGroupName","groupName","state","submitted","componentDidMount","handleSubmit","length","alert","members","map","resData","conversation_id","name","group_name","lastMessageTime","last_message_time","seenMembers","seen_members","newConversation","is_group","lastMessage","addNewConversation","emit","push","err","console","log","render","numberSelected","height","fontSize","width","fullname","textAlign","actionCreators","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input } from 'semantic-ui-react'\nimport { User } from './../../../_models/user';\nimport Avatar from './../../Avatar/Avatar';\nimport { createGroup } from './../../../_services/api.service';\nimport { userService } from './../../../_services/user.service';\n\nimport { withRouterInnerRef } from './../../../hocs/withRouter';\n\nimport { selectConversation } from './../../../_actions/chat.actions';\nimport { history } from './../../../_utils/history';\nimport { connect } from 'react-redux';\n\nimport Socket from './../../../Socket';\n\nimport './CreateGroup.css';\n\nclass CreateGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      userSelecteds: [],\n      userRenders: [],\n      groupName: '',\n      submitted: false,\n    }\n  }\n\n  componentDidMount() {\n    const { users } = this.props;\n    this.setState({\n      userRenders: users,\n    })\n  }\n\n  handleCheck = (event, user) => {\n    if (event.target.checked) {\n      const newUser = new User(user._id, user.firstname, user.lastname);\n      this.setState((preState) => ({\n        userSelecteds: [...preState.userSelecteds, newUser],\n      }));\n    }\n    else {\n      this.setState((preState) => {\n        const restUserSelecteds = preState.userSelecteds.filter(userSelected => {\n          const match = user._id === userSelected._id;\n          return !match;\n        })\n        return { userSelecteds: [...restUserSelecteds] };\n      })\n    }\n  }\n\n  handleRemove = (event, user) => {\n    event.preventDefault();\n    this.setState((preState) => {\n      const restUserSelecteds = preState.userSelecteds.filter(userSelected => {\n        const match = user._id === userSelected._id;\n        return !match;\n      })\n      return { userSelecteds: [...restUserSelecteds] };\n    })\n  }\n\n  handleSearchInput = (event, { value }) => {\n    event.preventDefault();\n    const { users } = this.props;\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      if (value === '') {\n        this.setState({\n          userRenders: users\n        })\n      }\n      else {\n        const results = userService.localSearchUser(users, value);\n        this.setState({\n          userRenders: results,\n        })\n      }\n      this.setState({ isLoading: false });\n    }, 300);\n\n  }\n\n  handleChangeGroupName = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    this.setState({ groupName: value });\n  }\n\n  async handleSubmit() {\n    const { groupName, userSelecteds } = this.state;\n    this.setState({ submitted: true });\n    if (userSelecteds.length < 2) {\n      alert(\"Require number of members is greater than 3\");\n      return false;\n    }\n    if (groupName) {\n      try {\n        const members = userSelecteds.map(user => {\n          return user._id;\n        })\n        const resData = await createGroup(groupName, members);\n        const conversation_id = resData._id;\n        const name = resData.group_name;\n        const lastMessageTime = resData.last_message_time\n        const seenMembers = resData.seen_members;\n\n        const newConversation = {\n          _id: conversation_id,\n          name: name,\n          is_group: true,\n          lastMessageTime: lastMessageTime,\n          seenMembers: seenMembers,\n          lastMessage: null,\n        };\n        this.props.addNewConversation(newConversation);\n\n        this.props.selectConversation({\n          conversation_id,\n          name,\n          is_group: true,\n          lastMessageTime,\n          seenMembers,\n          lastMessage: null\n        });\n\n        Socket.emit('ROOM.CLIENT.CREATE_GROUP', { ...newConversation, members})\n\n        history.push(`/${conversation_id}`);\n        return true;\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n    return false;\n  }\n\n  render() {\n    const { userRenders, userSelecteds, isLoading, groupName, submitted } = this.state;\n    const numberSelected = userSelecteds.length;\n    return (\n      <div className='Creat-Group-Form'>\n        <form name='form' onSubmit={this.handleSubmit}>\n          <div className={'form-group' + (submitted && !groupName ? ' has-error' : '')} style={{ height: '50px' }}>\n            <input type=\"text\"\n              className=\"form-control\"\n              name=\"groupName\"\n              value={groupName}\n              style={{ fontSize: '18px', height: '38px' }}\n              onChange={(event) => { this.handleChangeGroupName(event) }}\n            />\n            {submitted && !groupName &&\n              <div className=\"help-block\">Group name is required</div>\n            }\n          </div>\n        </form>\n\n        <hr></hr>\n\n        <div className='Form-Group'>\n          <div className='List-Member-Container'>\n            <Input loading={isLoading} size='mini'\n              placeholder='Search for people to add'\n              style={{ width: '95%', fontSize: '14px' }}\n              onChange={this.handleSearchInput}\n            />\n            <hr></hr>\n\n            <div className='Users-Container'>\n              {userRenders.length > 0\n                ? userRenders.map(user => {\n                  const fullname = user.firstname + ' ' + user.lastname;\n                  return (\n                    <div className=\"ResultContainer\" key={user._id}>\n                      <div><Avatar userID={user._id} /></div>\n                      <div className=\"Fullname\">{fullname}</div>\n                      <input type='checkbox' defaultChecked={false} onChange={(event) => { this.handleCheck(event, user) }}></input>\n                    </div>\n                  );\n                })\n                : <p style={{ textAlign: 'center' }}>No users</p>\n              }\n            </div>\n          </div>\n\n          <div className='Selected-Member-Container'>\n            <div className='Selected-Number-Container'>\n              <span className='Selected-Text'>SELECTED</span>\n              <span className='Selected-Number'>{numberSelected}</span>\n            </div>\n            <div className='Selected-User-Container'>\n              {\n                userSelecteds.map(user => {\n                  const fullname = user.firstname + ' ' + user.lastname;\n                  return (\n                    <div className=\"Selected-User\" key={user._id} onClick={() => { }}>\n                      <div><Avatar userID={user._id} /></div>\n                      <div className=\"Fullname\">{fullname}</div>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst actionCreators = {\n  selectConversation: selectConversation\n}\n\nexport default withRouterInnerRef(connect(null, actionCreators, null, { forwardRef: true })(CreateGroup));"]},"metadata":{},"sourceType":"module"}