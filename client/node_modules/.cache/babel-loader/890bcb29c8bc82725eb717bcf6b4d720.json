{"ast":null,"code":"import _defineProperty from \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ContactContainer/Search/ContactSearch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Search } from 'semantic-ui-react';\nimport Avatar from '../../Avatar/Avatar';\nimport { connect } from 'react-redux';\nimport { selectConversation } from './../../../_actions/chat.actions';\nimport { history } from './../../../_utils/history';\nimport _ from 'lodash';\nimport { userService } from './../../../_services/user.service';\nimport mongoose from 'mongoose';\nimport \"./ContactSearch.css\";\n\nconst resultRenderer = ({\n  title,\n  data\n}) => {\n  if (title === \"__feching_data__\") return React.createElement(\"div\", {\n    className: \"FechingData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Fetching data...\");\n  if (title === \"__no_results__\") return React.createElement(\"div\", {\n    className: \"FechingData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"No results\");else {\n    return React.createElement(\"div\", {\n      className: \"ResultContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      userID: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Fullname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, title));\n  }\n};\n\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nclass ContactSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (event, {\n      result\n    }) => {\n      event.preventDefault();\n      const name = result.data.firstname + ' ' + result.data.lastname;\n      const user_id = result.data._id;\n      let conversation_id = '';\n\n      if (result.data.conversation_id !== '') {\n        conversation_id = result.data.conversation_id;\n      } else {\n        conversation_id = mongoose.Types.ObjectId();\n      }\n\n      this.props.selectConversation({\n        conversation_id,\n        name,\n        user_id: user_id,\n        is_group: false,\n        lastMessageTime: null,\n        seenMembers: null,\n        lastMessage: null\n      });\n      history.push(\"/\".concat(conversation_id));\n      this.setState(_objectSpread({}, initialState));\n    };\n\n    this.handleSearchChange = (event, {\n      value\n    }) => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true,\n        value,\n        results: [{\n          title: \"__feching_data__\",\n          data: undefined\n        }]\n      });\n      const users = this.props.users;\n      setTimeout(() => {\n        if (value === \"\") {\n          this.setState(_objectSpread({}, initialState));\n          return;\n        }\n\n        const results = userService.localSearchUser(users, value);\n\n        if (results.length > 0) {\n          this.setState({\n            results: results.slice(0, 6).map(result => ({\n              title: result.firstname + ' ' + result.lastname,\n              data: result\n            }))\n          });\n        } else {\n          this.setState({\n            results: [{\n              title: \"__no_results__\",\n              data: undefined\n            }]\n          });\n        }\n\n        this.setState({\n          isLoading: false\n        });\n      }, 400);\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Search, {\n      input: {\n        icon: 'search',\n        iconPosition: 'left'\n      },\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results.map((item, index) => _objectSpread({}, item, {\n        key: index\n      })),\n      value: value,\n      resultRenderer: resultRenderer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst actionCreators = {\n  selectConversation: selectConversation\n};\nexport default withRouter(connect(null, actionCreators)(ContactSearch));","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/components/ContactContainer/Search/ContactSearch.js"],"names":["React","withRouter","Search","Avatar","connect","selectConversation","history","_","userService","mongoose","resultRenderer","title","data","_id","initialState","isLoading","results","value","ContactSearch","Component","state","handleResultSelect","event","result","preventDefault","name","firstname","lastname","user_id","conversation_id","Types","ObjectId","props","is_group","lastMessageTime","seenMembers","lastMessage","push","setState","handleSearchChange","undefined","users","setTimeout","localSearchUser","length","slice","map","componentDidMount","render","icon","iconPosition","debounce","leading","item","index","key","actionCreators"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Search } from 'semantic-ui-react';\nimport Avatar from '../../Avatar/Avatar';\n\nimport { connect } from 'react-redux';\nimport { selectConversation } from './../../../_actions/chat.actions';\nimport { history } from './../../../_utils/history';\n\nimport _ from 'lodash';\n\nimport { userService } from './../../../_services/user.service';\n\nimport mongoose from 'mongoose';\n\nimport \"./ContactSearch.css\";\n\nconst resultRenderer = ({ title, data }) => {\n\tif (title === \"__feching_data__\") return <div className=\"FechingData\">Fetching data...</div>;\n\tif (title === \"__no_results__\") return <div className=\"FechingData\">No results</div>;\n\telse {\n\t\treturn (\n\t\t\t<div className=\"ResultContainer\">\n\t\t\t\t<div><Avatar userID={data._id} /></div>\n\t\t\t\t<div className=\"Fullname\">{title}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nclass ContactSearch extends React.Component {\n\tstate = initialState;\n\n\tcomponentDidMount() {\n\t}\n\n\thandleResultSelect = (event, { result }) => {\n\t\tevent.preventDefault();\n\t\tconst name = result.data.firstname + ' ' + result.data.lastname;\n\t\tconst user_id = result.data._id;\n\t\tlet conversation_id = '';\n\t\tif (result.data.conversation_id !== '') {\n\t\t\tconversation_id = result.data.conversation_id;\n\t\t} else {\n\t\t\tconversation_id = mongoose.Types.ObjectId();\n\t\t}\n\t\tthis.props.selectConversation({ conversation_id, name, user_id: user_id, is_group: false, lastMessageTime: null, seenMembers: null, lastMessage: null });\n\t\thistory.push(`/${conversation_id}`);\n\t\tthis.setState({ ...initialState });\n\t}\n\n\thandleSearchChange = (event, { value }) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tisLoading: true,\n\t\t\tvalue, results: [{ title: \"__feching_data__\", data: undefined }]\n\t\t});\n\t\tconst { users } = this.props;\n\t\tsetTimeout(() => {\n\t\t\tif (value === \"\") {\n\t\t\t\tthis.setState({ ...initialState });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst results = userService.localSearchUser(users, value);\n\t\t\tif (results.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tresults: results.slice(0, 6).map((result) => ({ title: result.firstname + ' ' + result.lastname, data: result }))\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ results: [{ title: \"__no_results__\", data: undefined }] });\n\t\t\t}\n\t\t\tthis.setState({ isLoading: false });\n\t\t}, 400)\n\t}\n\n\trender() {\n\t\tconst { isLoading, value, results } = this.state;\n\t\treturn (\n\t\t\t<Search\n\t\t\t\tinput={{ icon: 'search', iconPosition: 'left' }}\n\t\t\t\tloading={isLoading}\n\t\t\t\tonResultSelect={this.handleResultSelect}\n\t\t\t\tonSearchChange={_.debounce(this.handleSearchChange, 500, { leading: true })}\n\t\t\t\tresults={results.map((item, index) => ({ ...item, key: index }))}\n\t\t\t\tvalue={value}\n\t\t\t\tresultRenderer={resultRenderer}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nconst actionCreators = {\n\tselectConversation: selectConversation\n}\n\nexport default withRouter(connect(null, actionCreators)(ContactSearch));"]},"metadata":{},"sourceType":"module"}