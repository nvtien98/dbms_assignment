{"ast":null,"code":"const SECOND = 1000;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nexport function getTimeDiffFromNow(time) {\n  const then = new Date(time);\n  const now = new Date();\n  const diff = now.getTime() - then.getTime();\n\n  if (diff < HOUR) {\n    return (parseInt(diff / MINUTE, 10) + 1).toString() + 'min';\n  } else if (diff < 24 * HOUR) {\n    return parseInt(diff / HOUR, 10).toString() + 'hr';\n  } else if (diff < 7 * DAY) {\n    return parseInt(diff / DAY, 10).toString() + 'd';\n  } else {\n    return time;\n  }\n}\nexport function toHHMM(time) {\n  const h = time.getHours();\n  const m = time.getMinutes();\n  return (h < 10 ? '0' + h.toString() : h.toString()) + ':' + (m < 10 ? '0' + m.toString() : m.toString());\n}","map":{"version":3,"sources":["/home/tiennv/Documents/HK191/DBMS/react_chat_app/client/src/_utils/time.js"],"names":["SECOND","MINUTE","HOUR","DAY","getTimeDiffFromNow","time","then","Date","now","diff","getTime","parseInt","toString","toHHMM","h","getHours","m","getMinutes"],"mappings":"AAAA,MAAMA,MAAM,GAAG,IAAf;AACA,MAAMC,MAAM,GAAGD,MAAM,GAAG,EAAxB;AACA,MAAME,IAAI,GAAGD,MAAM,GAAG,EAAtB;AACA,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAnB;AAEA,OAAO,SAASE,kBAAT,CAA4BC,IAA5B,EAAkC;AACxC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAb;AACA,QAAMG,GAAG,GAAG,IAAID,IAAJ,EAAZ;AACA,QAAME,IAAI,GAAGD,GAAG,CAACE,OAAJ,KAAgBJ,IAAI,CAACI,OAAL,EAA7B;;AAEA,MAAID,IAAI,GAAGP,IAAX,EAAiB;AAChB,WAAO,CAACS,QAAQ,CAACF,IAAI,GAAGR,MAAR,EAAgB,EAAhB,CAAR,GAA8B,CAA/B,EAAkCW,QAAlC,KAA+C,KAAtD;AACA,GAFD,MAGK,IAAIH,IAAI,GAAG,KAAKP,IAAhB,EAAsB;AAC1B,WAAQS,QAAQ,CAACF,IAAI,GAAGP,IAAR,EAAc,EAAd,CAAT,CAA4BU,QAA5B,KAAyC,IAAhD;AACA,GAFI,MAGA,IAAIH,IAAI,GAAG,IAAIN,GAAf,EAAoB;AACxB,WAAQQ,QAAQ,CAACF,IAAI,GAAGN,GAAR,EAAa,EAAb,CAAT,CAA2BS,QAA3B,KAAwC,GAA/C;AACA,GAFI,MAEE;AACN,WAAOP,IAAP;AACA;AACD;AAED,OAAO,SAASQ,MAAT,CAAgBR,IAAhB,EAAsB;AAC5B,QAAMS,CAAC,GAAGT,IAAI,CAACU,QAAL,EAAV;AACA,QAAMC,CAAC,GAAGX,IAAI,CAACY,UAAL,EAAV;AACA,SAAO,CAACH,CAAC,GAAG,EAAJ,GAAU,MAAMA,CAAC,CAACF,QAAF,EAAhB,GAAgCE,CAAC,CAACF,QAAF,EAAjC,IAAiD,GAAjD,IAAwDI,CAAC,GAAG,EAAJ,GAAU,MAAMA,CAAC,CAACJ,QAAF,EAAhB,GAAgCI,CAAC,CAACJ,QAAF,EAAxF,CAAP;AACA","sourcesContent":["const SECOND = 1000;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\n\nexport function getTimeDiffFromNow(time) {\n\tconst then = new Date(time);\n\tconst now = new Date();\n\tconst diff = now.getTime() - then.getTime();\n\n\tif (diff < HOUR) {\n\t\treturn (parseInt(diff / MINUTE, 10) + 1).toString() + 'min';\n\t}\n\telse if (diff < 24 * HOUR) {\n\t\treturn (parseInt(diff / HOUR, 10)).toString() + 'hr';\n\t}\n\telse if (diff < 7 * DAY) {\n\t\treturn (parseInt(diff / DAY, 10)).toString() + 'd';\n\t} else {\n\t\treturn time;\n\t}\n}\n\nexport function toHHMM(time) {\n\tconst h = time.getHours();\n\tconst m = time.getMinutes();\n\treturn (h < 10 ? ('0' + h.toString()) : h.toString()) + ':' + (m < 10 ? ('0' + m.toString()) : m.toString());\n}"]},"metadata":{},"sourceType":"module"}